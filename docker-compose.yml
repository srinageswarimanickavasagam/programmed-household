version: '3.9'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.4
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - ph-net
    healthcheck:
      test: curl -s http://es01:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.4
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - ph-net
    healthcheck:
      test: curl -s http://es02:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  kib01:
    image: docker.elastic.co/kibana/kibana:8.11.4
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200"]'
    depends_on:
      - es01
      - es02
    networks:
      - ph-net
  mysql-db:
    image: container-registry.oracle.com/mysql/community-server:8.2
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: programmedhousehold
      MYSQL_USER: phuser
      MYSQL_PASSWORD: phpassword
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ph-net
    healthcheck:
      test: [ "CMD", "/healthcheck.sh" ]
      timeout: 5s
      retries: 50
  coreservice:
    build:
      context: ./coreservice/coreservice-server
      dockerfile: Dockerfile
    container_name: coreservice
    ports:
      - "5000:5000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/programmedhousehold
      SPRING_DATASOURCE_USERNAME: phuser
      SPRING_DATASOURCE_PASSWORD: phpassword
      SPRING_DATASOURCE_HIKARI_DDL_AUTO: none
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - ph-net

  elasticsearch:
    build:
      context: ./elasticsearch/elasticsearch-server
      dockerfile: Dockerfile
    container_name: elasticsearch
    ports:
      - "9000:9000"
    environment:
      ELASTIC_HOST: es01
      ELASTIC_PORT: 9200
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: password
      MAX_CONN_TOTAL: 500
      MAX_CONN_PER_ROUTE: 500
    depends_on:
      es01:
       condition: service_healthy
      es02:
       condition: service_healthy
    networks:
      - ph-net

volumes:
  mysql-data: {}
  data01:
    driver: local
  data02:
    driver: local

networks:
  ph-net:
    driver: bridge